{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","clockName","props","console","log","toLocaleTimeString","clearInterval","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","className","ReactDOM","render","getElementById"],"mappings":"8MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GACbA,EAAUC,YAAcL,KAAKM,MAAMD,WACrCE,QAAQC,IAAR,oBACeJ,EAAUC,UADzB,uBACiDL,KAAKM,MAAMD,YAI9DE,QAAQC,IAAR,UACKR,KAAKM,MAAMD,UADhB,cAC+BL,KAAKJ,MAAMC,KAAKY,yBArBnD,kCAyBE,WACEF,QAAQC,IAAI,eAAgBR,KAAKD,SACjCW,cAAcV,KAAKD,WA3BvB,oBA8BE,WACE,IAAQM,EAAcL,KAAKM,MAAnBD,UACAR,EAASG,KAAKJ,MAAdC,KAER,OACE,gCACE,iCAASQ,IACR,MACAR,EAAKY,4BAtCd,GAA2BE,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAQ,CACNS,UAAWQ,IACXO,UAAU,GAHd,uDAME,WAAqB,IAAD,OAClBnB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEE,UAAWQ,QAC1B,MAEHQ,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,eAAe,WACvC,EAAKnB,SAAS,CAAEiB,UAAU,SAhBhC,oBAoBE,WACE,MAAgCpB,KAAKJ,MAA7BS,EAAR,EAAQA,UAAWe,EAAnB,EAAmBA,SAEnB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACA,qBAAKA,UAAU,QAAf,SACGH,GACI,cAAC,EAAD,CAAOf,UAAWA,aA5BjC,GAAyBM,IAAMC,WCb/BY,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.37a734e8.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.log(\n        `Old name: ${prevProps.clockName} / New name:${this.props.clockName}`,\n      );\n    }\n\n    console.log(\n      `${this.props.clockName} - ${this.state.date.toLocaleTimeString()}`,\n    );\n  }\n\n  componentWillUnmount() {\n    console.log('Remove timer', this.timerId);\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div>\n        <strong>{clockName}</strong>\n        {' - '}\n        {date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"clock\">\n          {hasClock\n            && <Clock clockName={clockName} />}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}